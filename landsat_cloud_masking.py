# -*- coding: utf-8 -*-
"""Landsat Cloud Masking.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1p-qqbTqBZ6zP07obZc0l6s8vS8U4wouy
"""

import ee
import geemap
import xarray as xr
!pip install xee
import xee

ee.Authenticate()
ee.Initialize(
    project = 'ee-lavibas23',
    opt_url = 'https://earthengine-highvolume.googleapis.com'
)

map = geemap.Map(basemap = 'SATELLITE')
map

roi = map.draw_last_feature.geometry()

roi

def cloud_mask(img):
  qa = img.select('QA_PIXEL')
  dilated = qa.bitwiseAnd(1 << 1).neq(0)
  cirrus = qa.bitwiseAnd(2 << 1).neq(0)
  cloud = qa.bitwiseAnd(3 << 1).neq(0)
  shadow = qa.bitwiseAnd(4 << 1).neq(0)
  mask = dilated.Or(cirrus).Or(cloud).Or(shadow)
  ms = img.select('SR_B.*').multiply(2.75e-05).add(-0.2)
  ndvi = ms.normalizedDifference(['SR_B5', 'SR_B4']).rename('ndvi')
  return ndvi.updateMask(mask.Not()).copyProperties(img, ['system:time_start'])

landsat = (
    ee.ImageCollection("LANDSAT/LC09/C02/T1_L2")
    .filterDate('2024','2025')
    .filterBounds(roi)
    .map(cloud_mask)
)

landsat

ds = xr.open_dataset(
    landsat,
    engine = 'ee',
    crs = 'EPSG:4326',
    geometry = roi,
    scale = 0.0001
)

ds = ds.sortby('time') * 1

ds.ndvi.plot(
    x = 'lon',
    y = 'lat',
    col = 'time',
    col_wrap = 6,
    cmap='RdYlGn',
    robust = True
)

ds_rol = ds.rolling(time = 7, center = True, min_periods = 1).mean('time')

ds_rol.ndvi.plot(
    x = 'lon',
    y = 'lat',
    col = 'time',
    cmap='RdYlGn',
    robust = True,
    col_wrap = 6
)